version: '3'

networks:
  home-server-network:

volumes:
  sqldata: 

services:
  ##############################################################################
  # Reverse proxy
  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    networks:
      - home-server-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  ##############################################################################
  # Let's Encrypt installer and updater for the reverse proxy
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - home-server-network
    
    
  ##############################################################################
  # Ping server
  # Prerequisite - pngan/ping-server exists on docker hub
  ping-server:
    image: pngan/ping-server
    restart: unless-stopped
    expose:
      - "8000"
    networks:
      - home-server-network


  ##############################################################################
  # Covid19 server
  # Prerequisite - pngan/covid19-server exists on docker hub
  covid19-server:
    image: pngan/covid19-server
    restart: unless-stopped
    expose:
      - "8080"
    networks:
      - home-server-network

  # ##############################################################################
  # # pihole ad blocking dns server
  # # More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "10080:80/tcp"
      - "10443:443/tcp"
    environment:
      TZ: 'Pacific/Auckland'
      WEBPASSWORD: 'ngan'
    # Volumes store your data between container upgrades
    volumes:
       - './etc-pihole/:/etc/pihole/'
       - './etc-dnsmasq.d/:/etc/dnsmasq.d/'
    dns:
      - 127.0.0.1
      - 1.1.1.1
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped      


  # ##############################################################################
  # SQL Server
  sqlserver:
    container_name: sql1
    image: mcr.microsoft.com/mssql/server:2019-CU3-ubuntu-18.04
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: 'Y'
      MSSQL_SA_PASSWORD: ${SQLPASSWORD}
      MSSQL_PID: 'Developer'
    volumes:
        - 'sqldata:/var/opt/mssql'
    restart: unless-stopped
        